datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         String    @id @default(cuid())
  username   String    @unique
  email      String?   @unique
  password   String?   // hashed
  role       Role      @default(USER)
  createdAt  DateTime  @default(now())
  avatarUrl  String?
  rooms      RoomMember[]
  messages   Message[]
  bannedAt   DateTime?
}

model Room {
  id          String     @id @default(cuid())
  name        String
  slug        String     @unique
  isPrivate   Boolean    @default(false)
  password    String?
  createdBy   User       @relation(fields: [createdById], references: [id])
  createdById String
  createdAt   DateTime   @default(now())
  members     RoomMember[]
  messages    Message[]
}

model RoomMember {
  id         String     @id @default(cuid())
  user       User       @relation(fields: [userId], references: [id])
  userId     String
  room       Room       @relation(fields: [roomId], references: [id])
  roomId     String
  role       MemberRole @default(MEMBER)
  joinedAt   DateTime   @default(now())
  mutedUntil DateTime?
  banned     Boolean    @default(false)
  @@unique([userId, roomId])
}

model Message {
  id        String   @id @default(cuid())
  content   String?
  fileUrl   String?
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  editedAt  DateTime?
  deleted   Boolean  @default(false)
}

enum Role {
  OWNER
  ADMIN
  MODERATOR
  USER
}

enum MemberRole {
  MEMBER
  MODERATOR
}
